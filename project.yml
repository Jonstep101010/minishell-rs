---
:project:
  :use_exceptions: FALSE
  :use_test_preprocessor: TRUE
  :use_auxiliary_dependencies: TRUE
  :build_root: build
  :release_build: TRUE
  :test_file_prefix: test_
  :which_ceedling: gem
  :ceedling_version: 0.31.1
  :output: minishell
  :default_tasks:
    - test:all

:release_build:
  :output: minishell
  :use_assembly: FALSE

# :extension:
#   :executable: .out

:paths:
  :test:
    - +:test/lexer/
    - +:test/bool_array/
    - +:test/parser/
    - +:test/utils/
    - +:test/env/
    - +:test/tokens/
    - +:test/random/
    - +:test/execution/
  :source:
    - +:src/*
  :include:
    - +:include/
  :support:
    - +:test/support
  :libraries:
    - include/libft
    - include/libgnl
    - include/libutils
    - include/libftprintf

:dependencies:
  :libraries:
    - :name: libft
      :fetch:
        :method: :none
      :source_path: include/libft
      :artifact_path: include/libft
      :environment:
        - CC=clang
      :build:
        - make
        - mkdir -p build
        - mv *.o build
      :artifacts:
        :includes:
          - ./
        :static_libraries:
          - libft.a
    - :name: libgnl
      :fetch:
        :method: :none
      :source_path: include/libgnl
      :artifact_path: include/libgnl
      :environment:
        - CC=clang
      :build:
        - make
        - mkdir -p build
        - mv *.o build
      :artifacts:
        :includes:
          - ./
        :static_libraries:
          - libgnl.a
    - :name: libutils
      :fetch:
        :method: :none
      :source_path: include/libutils
      :artifact_path: include/libutils
      :build:
        - make
      :artifacts:
        :includes:
          - ./include
          - ./src/string
          - ./src/array
          - ./src/char
          - ./src/utils
        :static_libraries:
          - libutils.a
    - :name: libftprintf
      :fetch:
        :method: :none
      :source_path: include/libftprintf
      :artifact_path: include/libftprintf
      :build:
        - make
        - mkdir -p build
        - mv *.o *.d build
      :artifacts:
        :includes:
          - ./
        :static_libraries:
          - libftprintf.a

:defines:
  # in order to add common defines:
  #  1) remove the trailing [] from the :common: section
  #  2) add entries to the :common: section (e.g. :test: has TEST defined)
  :common: &common_defines []
  :test:
    - *common_defines
    - TEST
    - DEBUG
  :test_preprocess:
    - *common_defines
    - TEST

:cmock:
  :mock_prefix: mock_
  :when_no_prototypes: :warn
  :enforce_strict_ordering: TRUE
  :plugins:
    - :ignore
    - :callback
  :treat_as:
    uint8:    HEX8
    uint16:   HEX16
    uint32:   UINT32
    int8:     INT8
    bool:     UINT8

# Ceedling defaults to using gcc for compiling, linking, etc.
# As [:tools] is blank, gcc will be used (so long as it's in your system path)
# See documentation to configure a given toolchain for use
:tools:
  :test_compiler:
    :executable: clang
    :name: 'clang test compiler'
    :arguments:
      - -c ${1}
      - -g3
      - -Wall
      - -Wextra
      - -Werror
      - -I"$": COLLECTION_PATHS_TEST_SUPPORT_SOURCE_INCLUDE_VENDOR
      - -MMD -MP
      - -DDEBUG
      - -o ${2}
  :test_linker:
    :executable: clang
    :name: 'clang test linker'
    :arguments:
      - ${1}
      - -o ${2}
  :release_compiler:
    :executable: clang
    :name: 'clang release compiler'
    :arguments:
      - -g3
      - -Wall
      - -Wextra
      - -Werror
      - -I"$": COLLECTION_PATHS_TEST_SUPPORT_SOURCE_INCLUDE_VENDOR
      - -I"$": COLLECTION_PATHS_TEST_TOOLCHAIN_INCLUDE
      - -MMD -MP
      - -DDEBUG
      - -c ${1}
      - -o ${2}
  :release_linker:
    :executable: clang
    :name: 'clang release linker'
    :arguments:
      - ${1}               #list of object files to link
      - -lreadline
      - -L./include/libgnl -lgnl -I./include/libgnl -L./include/libft -lft -I./include/libft
      - -L./include/libutils -lutils -I./include/libutils -L./include/libftprintf -lftprintf -I./include/libftprintf
      - -o ${2}            #output file
  
  :release_dependencies_generator:
    :executable: clang
    :name: Clang
  :test_dependencies_generator:
    :executable: clang
    :name: Clang

# LIBRARIES
# These libraries are automatically injected into the build process. Those specified as
# common will be used in all types of builds. Otherwise, libraries can be injected in just
# tests or releases. These options are MERGED with the options in supplemental yaml files.

:module_generator:
  :source_root: src
  :header_root: include
  :test_root: test
  :support_root: test/support

:plugins:
  :load_paths:
    - "#{Ceedling.load_path}"
  :enabled:
    - xml_tests_report
    - module_generator
    - stdout_pretty_tests_report
    - compile_commands_json
    - dependencies
...